{
  "interval": {
    "intervalStart": "2025-05-27T00:00:00.000Z",
    "intervalEnd": "2025-05-28T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/elizaos.github.io",
  "overview": "From 2025-05-27 to 2025-05-28, elizaos/elizaos.github.io had 1 new PRs (0 merged), 1 new issues, and 6 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDONNAI9864e7hZ",
      "title": "feat: Multi-repo support",
      "author": "madjin",
      "number": 108,
      "repository": "elizaos/elizaos.github.io",
      "body": "# Multi-Repository Support Implementation Tasks\n\nThis document breaks down the implementation tasks for adding multi-repository support to the Eliza Leaderboard, based on the phases outlined in `plan/multi-repo.md`.\n\n## Phase 1: Foundational Multi-Repo Support\n\n**Goal:** Enable the pipeline to ingest, process, and store data from multiple configured repositories, with basic per-repository output.\n\n-   [x] **Task 1.1: Modify `pipeline.config.ts` Structure**\n    -   [x] Update the `repositories` array in `config/pipeline.config.ts` to accept objects containing `owner`, `name`, and `repoId` (e.g., `{ owner: \"elizaos\", name: \"eliza\", repoId: \"elizaos/eliza\" }`).\n    -   [x] Ensure existing configuration loading logic correctly parses the new structure.\n    -   [x] Update type definitions for `PipelineConfig` to reflect this change.\n-   [ ] **Task 1.2: Update Core Pipeline Scripts for Iteration**\n    -   [ ] Modify the `ingest` pipeline in `cli/analyze-pipeline.ts` (and its underlying modules in `src/lib/pipelines/ingest/`) to iterate over each configured repository.\n        -   [ ] Pass the correct `repoId` (and owner/name if needed) to GitHub API calls and data processing functions.\n    -   [ ] Modify the `process` pipeline in `cli/analyze-pipeline.ts` (and `src/lib/pipelines/process/`) to operate on data from all configured repositories, ensuring `repoId` is used for correct association.\n    -   [ ] Modify the `export` pipeline in `cli/analyze-pipeline.ts` (and `src/lib/pipelines/export/`) to generate outputs for each repository, likely maintaining the `data/<owner_repo>/` structure.\n-   [ ] **Task 1.3: Ensure Data Segregation**\n    -   [ ] **Database:** Confirm that all database interactions (inserts, updates, queries) in Drizzle ORM correctly use the `repoId` (or equivalent `repository` field) to associate data with the correct repository (ref: `src/lib/data/schema.ts`).\n        -   [ ] Verify `repositories` table is populated correctly for each new repo.\n        -   [ ] Verify raw data tables (`rawPullRequests`, `rawIssues`, etc.) correctly link to `repositories.repoId`.\n    -   [ ] **File System:** Confirm that file-based outputs (JSON summaries, logs if any) are correctly placed in per-repository directories (e.g., `data/elizaos_eliza/`, `data/elizaos-plugins_myplugin/`).\n-   [ ] **Task 1.4: Verify Commit Deduplication**\n    -   [ ] Test the ingestion process with repositories that have shared commit history (if identifiable examples exist).\n    -   [ ] Confirm that commits with identical hashes are stored only once in `rawCommits` or are handled appropriately to avoid duplicate processing and scoring.\n        -   Investigate if `rawCommits.oid` (primary key) handles this naturally.\n-   [ ] **Task 1.5: Basic Per-Repository Reporting/Summarization**\n    -   [ ] Ensure the `summarize` pipeline (project summaries) can run for each configured repository and outputs to the correct `data/<owner_repo>/summaries/` directory.\n    -   [ ] Initial verification that existing website/UI components can (at a minimum) display data if pointed to a specific repository's output, or that per-repo pages can be generated. (Focus on data backend first).\n-   [ ] **Task 1.6: Update CLI Commands**\n    -   [ ] Review and update CLI command options in `cli/analyze-pipeline.ts` if necessary. For example, `--repository` flags might need to accept multiple values, or a new `--all-repos` flag might be introduced. Or, it might default to all repos in the config unless specified.\n    -   [ ] Update help messages and `README.md` for CLI changes.\n\n## Phase 2: Enhanced Scoring and Aggregation\n\n**Goal:** Develop strategies for viewing aggregated data (e.g., org-level) and explore more flexible scoring for a multi-repo context.\n\n-   [ ] **Task 2.1: Develop Aggregated View Strategies (Org-Level)**\n    -   [ ] Design how organization-level summaries or metrics could be calculated (e.g., total contributions to `elizaos` org).\n    -   [ ] Determine if new database tables or views are needed for storing/querying aggregated data.\n    -   [ ] Implement proof-of-concept for generating basic org-level statistics.\n-   [ ] **Task 2.2: Explore Flexible/Subjective Scoring Mechanisms**\n    -   [ ] Research and document potential approaches for allowing user-defined scoring weights (e.g., funders specifying weights for issue types, PR sizes, specific tags across selected repos).\n    -   [ ] Consider how `config/pipeline.config.ts` might be extended or if a new configuration mechanism/UI is needed for this.\n    -   [ ] Assess impact on `userTagScores` and `userDailyScores` if scores become more dynamic.\n-   [ ] **Task 2.3: Refine AI Summary Generation for Multi-Repo/Org Contexts**\n    -   [ ] Evaluate if the `projectContext` in `config/pipeline.config.ts` for AI summaries needs to be dynamic (e.g., different context per org, or a broader context for org-level summaries).\n    -   [ ] Test AI summary quality when summarizing activities across multiple repositories within an organization.\n    -   [ ] Adapt summarization prompts or logic in `src/lib/pipelines/summarize/` as needed.\n\n## Phase 3: Advanced Funder UX and LLM Integration\n\n**Goal:** Improve the user experience for stakeholders (funders) by providing better tools for data exploration and leveraging LLMs for insights.\n\n-   [ ] **Task 3.1: Design and Implement Enhanced Funder UX**\n    -   [ ] Brainstorm and mock up UI features that allow funders to:\n        -   [ ] Easily switch between per-repo, per-org, and global views.\n        -   [ ] Filter and sort contributors/contributions based on various criteria (tags, activity types, date ranges across multiple repos).\n        -   [ ] Apply their subjective scoring/weighting (if implemented in Phase 2).\n    -   [ ] Implement frontend changes in `src/app/` and related components.\n-   [ ] **Task 3.2: Integrate LLMs for Advanced Data Querying/Interpretation**\n    -   [ ] Explore feasibility of using LLMs to answer natural language questions about the contribution data (e.g., \"Show me top TypeScript contributors to elizaos-plugins this month\").\n    -   [ ] Design and prototype a system for this, considering data context provision to the LLM.\n\n## Cross-Cutting Concerns / To-Do Throughout\n\n-   [ ] **Testing:** Add unit and integration tests for multi-repo functionality.\n-   [ ] **Documentation:** Update `README.md`, `plan/multi-repo.md`, and any other relevant documentation.\n-   [ ] **Error Handling:** Ensure robust error handling for scenarios like invalid repo configurations, API errors for specific repos, etc.\n-   [ ] **Performance:** Monitor and optimize performance, especially during ingestion and processing of many repositories. Consider implications for `sqlite-diffable` and data sync.\n-   [ ] **GitHub Issue Creation:** Create corresponding GitHub issues for these tasks.\n-   [ ] **Branch Management:** Regularly merge changes from `main` to `multi-repo` and vice-versa as appropriate. ",
      "createdAt": "2025-05-27T20:25:14Z",
      "closedAt": null,
      "state": "OPEN",
      "commentCount": 1
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDONNAI986X2Uzc",
      "title": "feat: update repoconfig",
      "author": "madjin",
      "number": 109,
      "body": "\r\n![image](https://github.com/user-attachments/assets/00cfa68c-24b9-4fca-a89f-9ac8ce228a22)\r\n\r\n1. **Configuration Updates**:\r\n   - Modified `config/pipeline.config.ts` to support multiple repositories with a new structure that includes `owner`, `name`, and `defaultBranch` for each repository\r\n\r\n2. **Pipeline System Enhancements**:\r\n   - Updated the pipeline system to handle multiple repositories through the `getSelectedRepositories` step\r\n   - Modified core pipeline components (ingest, process, export, summarize) to iterate over configured repositories\r\n   - Added repository-specific data segregation in storage paths (e.g., `data/<owner_repo>/`)\r\n\r\n3. **Documentation and Planning**:\r\n   - Created `plan/multi-repo.md` outlining the multi-repository support strategy\r\n   - Added `plan/tasks.md` with detailed implementation tasks for the multi-repo feature\r\n\r\n4. **Pipeline Configuration Types**:\r\n   - Updated `src/lib/pipelines/pipelineConfig.ts` with new schema definitions for repository configuration\r\n   - Added validation and transformation logic for repository configurations\r\n\r\n---\r\n\r\nReasons\r\n\r\n1. **Scalability**: The system needed to expand beyond a single repository to support both the main `elizaos` organization and its plugins ecosystem, requiring a more flexible configuration structure.\r\n\r\n2. **Data Organization**: Each repository's data needs to be properly segregated to maintain clear boundaries and prevent cross-contamination, while still allowing for organization-wide analytics.\r\n\r\n3. **Future-Proofing**: The changes establish a foundation for adding more repositories and organizations in the future, with proper configuration validation and data handling patterns in place.\r\n\r\nThese changes follow the system's existing patterns (as seen in the pipeline rules) while extending its capabilities to handle multiple repositories in a maintainable way.\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Added support for tracking and displaying multiple repositories, including new metadata fields for repository owner and name.\n  - Enhanced configuration to specify repositories using separate owner and name fields.\n\n- **Database**\n  - Updated the database schema to include owner and name columns for repositories.\n  - Added a new migration and schema snapshot reflecting the expanded repository metadata.\n\n- **Bug Fixes**\n  - Improved robustness of database migrations and worktree management during data synchronization.\n\n- **Documentation**\n  - Introduced planning and task documents outlining multi-repository support and implementation phases.\n\n- **Chores**\n  - Added environment variable to limit the number of users generated in certain workflows.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/elizaos.github.io",
      "createdAt": "2025-05-27T20:45:56Z",
      "mergedAt": "2025-06-19T21:57:43Z",
      "additions": 3027,
      "deletions": 86
    }
  ],
  "codeChanges": {
    "additions": 0,
    "deletions": 0,
    "files": 0,
    "commitCount": 0
  },
  "completedItems": [],
  "topContributors": [
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 218.476286093218,
      "prScore": 218.476286093218,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "yungalgo: Merged 6 PRs, including a significant feature update in PR #4795 (+17093/-2385 lines), while modifying 105 files with a total of +9515/-1767 lines across 18 commits. The work was primarily focused on feature development (28%) and other tasks (33%), demonstrating consistent daily activity."
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 115.91438854208717,
      "prScore": 110.47638854208716,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.43799999999999994,
      "summary": "0xbbjoker: Merged 2 PRs (#4796 and #4786) with significant code changes (+536/-13 lines and +59/-215 lines respectively), while also opening a new PR (#4799) focused on integration tests. Active today with 8 commits, modifying 39 files (+1917/-586 lines), primarily concentrating on feature work (63%) and bug fixes (25%)."
    },
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 77.6663177825133,
      "prScore": 52.4663177825133,
      "issueScore": 0,
      "reviewScore": 25,
      "commentScore": 0.2,
      "summary": "wtfsayo: Merged 1 PR (#4797) with significant changes (+177/-27 lines) and modified 217 files overall (+21196/-1692 lines) across 14 commits, primarily focusing on other work (71%) and bugfixes (21%). Actively engaged with 5 PR reviews, providing 5 approvals and 1 comment, demonstrating consistent daily contributions."
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 70.80966038422864,
      "prScore": 65.80966038422864,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": "odilitime: Merged 1 PR (#4787 \"feat: improving typing\") with a net change of +8/-5 lines and currently has 1 open PR (#4802 \"feat: convert plugin-sql over to core-plugin-v2\"). Made significant code changes across 119 files, contributing a total of +9311/-1224 lines with a focus on other work (59%) and bugfixes (19%)."
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 66.34022691813125,
      "prScore": 56.34022691813125,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0,
      "summary": "ChristopherTrimboli: Merged 1 PR (#4788) with minor changes (+2/-2 lines) and is currently working on another open PR (#4798). Made significant code modifications across 38 files (+204/-81 lines) with a focus on other work (60%) and bugfixes (20%)."
    },
    {
      "username": "madjin",
      "avatarUrl": "https://avatars.githubusercontent.com/u/32600939?u=cdcf89f44c7a50906c7a80d889efa85023af2049&v=4",
      "totalScore": 60.4007738965761,
      "prScore": 58.060773896576094,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "HarshModi2005",
      "avatarUrl": "https://avatars.githubusercontent.com/u/142230924?u=64e337bbdb6b3aded5943b7e297759e7a3cfc0f0&v=4",
      "totalScore": 54.301773896576094,
      "prScore": 54.301773896576094,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "HarshModi2005: Merged 1 significant pull request (#4801) with a total of +11659/-1592 lines, focusing entirely on feature work. Modified 27 files with a total of +4718/-62 lines, demonstrating consistent daily activity."
    },
    {
      "username": "lalalune",
      "avatarUrl": "https://avatars.githubusercontent.com/u/18633264?u=e2e906c3712c2506ebfa98df01c2cfdc50050b30&v=4",
      "totalScore": 50.1527738965761,
      "prScore": 50.1527738965761,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "lalalune: Merged 1 significant PR (#4789) with a total of +9695/-4229 lines, focusing on feature work, refactoring, and testing across 66 modified files. Maintained a consistent activity pattern with 4 commits today, demonstrating balanced contributions across various aspects of the codebase."
    },
    {
      "username": "imholders",
      "avatarUrl": "https://avatars.githubusercontent.com/u/202005793?v=4",
      "totalScore": 28.455747107964573,
      "prScore": 28.455747107964573,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": "imholders: Merged 1 PR (#4800) with significant documentation updates (+20/-2 lines) and maintained a consistent activity pattern, being active every day. Focused entirely on documentation work today, modifying 1 file."
    },
    {
      "username": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4",
      "totalScore": 6,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 6,
      "commentScore": 0,
      "summary": "monilpat: Reviewed 1 pull request, issuing 1 change request, but did not approve any. Activity remains sporadic, with no other contributions today."
    }
  ],
  "newPRs": 1,
  "mergedPRs": 0,
  "newIssues": 1,
  "closedIssues": 0,
  "activeContributors": 6
}