{
  "interval": {
    "intervalStart": "2025-07-15T00:00:00.000Z",
    "intervalEnd": "2025-07-16T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos/elizaos.github.io",
  "overview": "From 2025-07-15 to 2025-07-16, elizaos/elizaos.github.io had 1 new PRs (1 merged), 0 new issues, and 3 active contributors.",
  "topIssues": [
    {
      "id": "I_kwDONNAI986-IhX0",
      "title": "Multi Repo Summarization",
      "author": "META-DREAMER",
      "number": 141,
      "repository": "elizaos/elizaos.github.io",
      "body": "Prompt:\n\nThis @aiProjectSummary.ts  contains the logic for generating daily, weekly and monthly summaries, however it is outdated and designed for only summarizing one repo. Help me modify the prompt and code to generate overall summaries of activity across multiple repos. Requirements:\n\n- The resulting summary should be in markdown format and include repo names when referencing issues / PRs etc, unless its in a section specific to a repo already\n- The \"completed work\" section should be organized by repo, so that the LLM knows what  activity happened in which repo\n- There should be a different structure to the daily summary compared to the weekly or monthly summaries. \n    - Weekly and monthly summaries potentially contain a lot more activity and data, so their prompts should be different to better format the output to make it digestable, likely with different sections per repo since \"overall summary\" would be too much to condense if there's hundreds of issues and PRs.\n    - This means we should have a separate step to generate weekly/monthly summaries for each repo, and then feed those weekly/monthly summaries into the prompt for generating an overall  weekly/monthly summary for the whole org / project. Plan to create a new generateRepoSummaries pipeline and aiRepoSummary.ts file containing prompt that handles that, which will basically be reusing the existing@generateProjectSummary.ts code but renaming it to generateRepoSummary. Then, a new generateOverallSummary pipeline will then take in these repo specific summaries to help generate overall summary.\n     - For generating repo specific summaries, instead of mapping over all repos in @projectSummariesPipeline , it should first generate time intervals, and then filter first for repos that actually have activity on those intervals, and only then pass in that repo to generateProjectSummaryForInterval\n     - daily org/project summaries wont have as much activity, so the summary format can be more detailed with the raw PR / issue data of all the repo's being fed into it (as opposed to the repo specific summaries being fed in the case of weekly/monthly)\n\n\nAlso think hard about other changes that we would need to make to the code / implementation to make it work well in a multirepo setup, and then generate a PRD / detailed plan and task list for implementing this change. Update @multi-repo-tasks.md with a section containing these new tasks.\n\n\nLets refine the plan first. Here's the psuedocode proper structure for the new pipelines:\n\n1. generateDailyRepoSummaries pipeline:\n- generateTimeIntervals(\"day\") (no repoId as input)\n- mapStep(pipe(getReposWithActivity(interval), mapStep(generateDailyRepoSummary)))\n\nThe generateDailyRepoSummary prompt should include details of each issue / PR that day in the summary prompt, including files changed in each PR and comments on each issue. The output format of the daily summary for a repo should be a single large paragraph + a details markdown section (described below) if there is lots of activity that day.\n\n2. Similarly for weekly / monthly repo summaries, except the prompt for the weekly / monthly should include the contents of the daily summaries, and the output format should have both a single paragraph summary in overview section of markdown, as well as a detailed broken down overview of that intervals activity, similar to how it is now.\n\nThen for overall summaries:\n3. generateDailyOverallSummary\nwill take in the daily summaries of all repos and generate a detailed daily overall summary, with similar structure to the current project summary\n- pipe(generateTimeIntervals(\"day\"), mapStep(generateOverallSummaryForInterval))\ngenerateOverallSummaryForInterval fetches all the daily summaries for that day and puts them into the prompt. Output format for the daily prompt should be markdown with overview section containing 2-3 paragraphs highlighing changes across all repos that day cohesively, and then formatted details of most important / biggest changes that day below\n4. generateWeeklyOverallSummary / generateMonthlyOverallSummary\nsimilar to above but takes in the weekly / monthly summaries of each repo of each day that week / month, and has an output format that has the 2-3 paragraphs overall summary, but also repo specific sections for the most key changes across the most active/important repos.\n\nUpdate the plan and tasks accordinly to take all these details into account please. Think hard about other considerations to improve this plan and include those as well. Dont implement any code yet.\n",
      "createdAt": "2025-06-30T21:27:09Z",
      "closedAt": "2025-07-15T00:18:33Z",
      "state": "CLOSED",
      "commentCount": 0
    }
  ],
  "topPRs": [
    {
      "id": "PR_kwDONNAI986cxW5W",
      "title": "Implement multi repo summaries",
      "author": "META-DREAMER",
      "number": 142,
      "body": "Closes #141\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **New Features**\n  * Introduced multi-repository project summarization, generating overall summaries across all repositories for daily, weekly, and monthly intervals.\n  * Added new database support and storage for aggregated overall summaries.\n  * Enhanced contributor summaries to aggregate activity across multiple repositories.\n  * Improved repository summary detail, including richer issue and pull request data.\n  * Added new configuration options for tracked repositories and summary models.\n\n* **Improvements**\n  * Refined AI prompt instructions for more readable, impactful contributor and project summaries.\n  * Optimized summary generation pipelines for modularity and scalability.\n  * Updated documentation and coding standards for contributors.\n\n* **Bug Fixes**\n  * Corrected repository tracking configuration and improved handling of repository activity detection.\n\n* **Chores**\n  * Updated and reorganized planning documents to reflect new multi-repository summary architecture.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos/elizaos.github.io",
      "createdAt": "2025-06-30T21:29:00Z",
      "mergedAt": "2025-07-15T00:18:32Z",
      "additions": 4079,
      "deletions": 343
    },
    {
      "id": "PR_kwDONNAI986e42u9",
      "title": "Multi repo frontend",
      "author": "META-DREAMER",
      "number": 143,
      "body": "",
      "repository": "elizaos/elizaos.github.io",
      "createdAt": "2025-07-15T00:27:28Z",
      "mergedAt": null,
      "additions": 1487,
      "deletions": 144
    }
  ],
  "codeChanges": {
    "additions": 4079,
    "deletions": 343,
    "files": 25,
    "commitCount": 5
  },
  "completedItems": [
    {
      "title": "Implement multi repo summaries",
      "prNumber": 142,
      "type": "other",
      "body": "Closes #141\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **New Features**\n  * Introduced multi-repository project summarization, generating overall summaries across all repositorie",
      "files": [
        "AGENTS.md",
        "cli/analyze-pipeline.ts",
        "config/pipeline.config.ts",
        "drizzle/0011_silky_riptide.sql",
        "drizzle/meta/0011_snapshot.json",
        "drizzle/meta/_journal.json",
        "plan/multi-repo-summaries.md",
        "plan/multi-repo-tasks.md",
        "src/app/[interval]/[[...date]]/queries.ts",
        "src/lib/data/schema.ts",
        "src/lib/fsHelpers.ts",
        "src/lib/pipelines/export/exportRepoStats.ts",
        "src/lib/pipelines/export/queries.ts",
        "src/lib/pipelines/runPipeline.ts",
        "src/lib/pipelines/summarize/aiContributorSummary.ts",
        "src/lib/pipelines/summarize/aiOverallSummary.ts",
        "src/lib/pipelines/summarize/aiRepoSummary.ts",
        "src/lib/pipelines/summarize/generateContributorSummary.ts",
        "src/lib/pipelines/summarize/generateOverallSummary.ts",
        "src/lib/pipelines/summarize/generateProjectSummary.ts",
        "src/lib/pipelines/summarize/generateRepoSummary.ts",
        "src/lib/pipelines/summarize/getActiveRepos.ts",
        "src/lib/pipelines/summarize/index.ts",
        "src/lib/pipelines/summarize/mutations.ts",
        "src/lib/pipelines/summarize/queries.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 357.3004911990626,
      "prScore": 356.8624911990626,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 118.55724832347069,
      "prScore": 113.35724832347069,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "META-DREAMER",
      "avatarUrl": "https://avatars.githubusercontent.com/u/7143583?u=96f63f10e066a06d5ad592c8efc659e2b84a68fc&v=4",
      "totalScore": 33.5437738965761,
      "prScore": 33.5437738965761,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 24.31329254649702,
      "prScore": 23.875292546497022,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "imthatcarlos",
      "avatarUrl": "https://avatars.githubusercontent.com/u/20136572?u=1c65c44403457a7870138f8f23fa0ef27487fb62&v=4",
      "totalScore": 23.404306144334054,
      "prScore": 23.204306144334055,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=27713fbe603baae91ef519990facbacd6c23e93d&v=4",
      "totalScore": 6,
      "prScore": 0,
      "issueScore": 6,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 1,
  "mergedPRs": 1,
  "newIssues": 0,
  "closedIssues": 1,
  "activeContributors": 3
}