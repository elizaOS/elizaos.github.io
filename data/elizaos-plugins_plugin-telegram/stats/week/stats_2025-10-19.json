{
  "interval": {
    "intervalStart": "2025-10-19T00:00:00.000Z",
    "intervalEnd": "2025-10-26T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos-plugins/plugin-telegram",
  "overview": "From 2025-10-19 to 2025-10-26, elizaos-plugins/plugin-telegram had 2 new PRs (2 merged), 0 new issues, and 3 active contributors.",
  "topIssues": [],
  "topPRs": [
    {
      "id": "PR_kwDOOtl_Us6usBES",
      "title": "Fix: GIF animations not playing in Telegram",
      "author": "0xRabbidfly",
      "number": 20,
      "body": "# Fix: GIF animations not playing in Telegram\r\n\r\n## Problem\r\nGIF attachments are being sent as static images instead of animations in Telegram messages.\r\n\r\n## Root Cause\r\nThe `sendMessageInChunks` method uses a `typeMap` with prefix matching that can match GIFs to the generic `'image'` prefix before checking the specific `'image/gif'` prefix, depending on JavaScript object iteration order. This causes GIFs to be sent via `sendMedia()` with `MediaType.PHOTO` instead of `MediaType.ANIMATION`.\r\n\r\n```typescript\r\n// Original buggy code\r\nconst typeMap = {\r\n  'image/gif': MediaType.ANIMATION,\r\n  image: MediaType.PHOTO,  // ← Matches 'image/gif'.startsWith('image')\r\n  ...\r\n};\r\n```\r\n\r\n## Solution\r\n- Add explicit GIF detection before generic image handling\r\n- Use `ctx.replyWithAnimation()` directly for GIFs to preserve animation\r\n- Exclude `.gif` from the `isImage` regex pattern\r\n- Improve media routing with explicit type checks and proper fallbacks\r\n- Fix async anti-pattern: replace `.map(async)` with `for await` loop\r\n\r\n## Changes\r\n- ✅ Separate `isGif` check before `isImage` \r\n- ✅ Use Telegram's `replyWithAnimation()` for GIFs\r\n- ✅ Add fallback handling for failed GIF/video sends\r\n- ✅ Modernize attachment handling with direct Telegram API methods\r\n- ✅ Remove unreliable prefix-based type mapping for images/videos\r\n\r\n## Testing\r\n- Tested with live Telegram bot sending GIF cards\r\n- Verified GIFs now animate correctly instead of showing as static images\r\n- Build passes successfully\r\n- TypeScript compilation successful\r\n\r\n## Risk Assessment\r\n**LOW RISK** - This is a targeted fix that:\r\n- Only affects attachment handling flow\r\n- Adds explicit checks without removing existing fallbacks\r\n- Improves code reliability with defensive programming\r\n- Doesn't change API surface or break existing functionality\r\n\r\n## Related\r\nFixes the issue where content with `contentType: 'image/gif'` attachments are displayed as static images in Telegram clients.\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **Bug Fixes**\n  * Enhanced attachment handling with improved fallback logic for media types (videos, GIFs, and images)\n  * Improved robustness in message processing and chat handling\n  * Better error logging and messaging consistency\n\n* **Style**\n  * Code formatting standardization\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/plugin-telegram",
      "createdAt": "2025-10-20T18:34:02Z",
      "mergedAt": null,
      "additions": 720,
      "deletions": 402
    },
    {
      "id": "PR_kwDOOtl_Us6ukfbE",
      "title": "fix: resolve button handling crash and logging errors",
      "author": "0xbbjoker",
      "number": 19,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Safely converts Telegram buttons with validation and fallbacks, improves structured logging, expands test coverage, and updates package/core versions.\n> \n> - **Utils**:\n>   - `convertToTelegramButtons`: validate inputs, skip invalid buttons, default unknown `kind` to `url`, and log warnings.\n>   - `cleanText`: remove NULLs via split/join to avoid regex control-char issues.\n> - **Message Handling**:\n>   - Use structured `logger.error({ error }, ...)` in document processing paths.\n> - **Tests (migrated to bun:test)**:\n>   - Add comprehensive tests for button conversion (unknown/invalid cases), message splitting/empty text, media sending (photo/video/document, local files), error handling, and exports.\n> - **Chore**:\n>   - Bump version to `1.6.2` and upgrade `@elizaos/core` to `^1.6.2`.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 1b280124b57b40279b61b2da63639f6506b08fea. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n* **Tests**\n  * Expanded and reorganized test suite with broader coverage for message splitting, text conversion, button handling, media sending, and error scenarios; migrated mocks for more reliable isolation.\n\n* **Chores**\n  * Bumped package version and updated core dependency.\n\n* **Bug Fixes**\n  * Improved input validation and error logging so invalid buttons and message/media edge cases are handled and reported more robustly.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/plugin-telegram",
      "createdAt": "2025-10-20T06:53:30Z",
      "mergedAt": "2025-10-20T13:50:49Z",
      "additions": 719,
      "deletions": 316
    },
    {
      "id": "PR_kwDOOtl_Us6sz0Rj",
      "title": "feat: migrate to runtime.handleMessage()",
      "author": "0xbbjoker",
      "number": 17,
      "body": "Migrates Telegram plugin from event-based message handling to direct\r\nMessageService calls, making message flow easier to trace and debug.\r\n\r\nChanges:\r\n- Replace runtime.emitEvent(MESSAGE_RECEIVED) with runtime.handleMessage()\r\n- Remove unused event imports (EventType, TelegramEventTypes, TelegramMessageReceivedPayload)\r\n- Update @elizaos/core dependency to workspace:* for local development\r\n- Fix Zod error typing in environment.ts validation\r\n\r\nBenefits:\r\n- Clear call stack: Telegram → runtime.handleMessage() → MessageService\r\n- Easier debugging: can step through entire flow without event routing\r\n- Better developer experience: no hidden event dispatching\r\n\r\nBefore:\r\n  this.runtime.emitEvent(EventType.MESSAGE_RECEIVED, {\r\n    runtime: this.runtime, message: memory, callback, source: 'telegram'\r\n  });\r\n  this.runtime.emitEvent(TelegramEventTypes.MESSAGE_RECEIVED, {...});\r\n\r\nAfter:\r\n  await this.runtime.handleMessage(memory, callback);\r\n\r\nRequires: feat/core-message-service-interface\n\n<!-- CURSOR_SUMMARY -->\n---\n\n> [!NOTE]\n> Replaces event-based Telegram message handling with direct MessageService.handleMessage calls, and cleans up Zod validation and document-processing logs/formatting.\n> \n> - **Telegram message handling**:\n>   - Replace `runtime.emitEvent(...MESSAGE_RECEIVED...)` with direct `runtime.messageService.handleMessage(runtime, memory, callback)` and add missing-service guard.\n>   - Minor refactors in `processMessage`/document handlers: consistent quotes, multiline conditions, improved error logging, and attachment cleanup mapping style.\n> - **Config validation (`src/environment.ts`)**:\n>   - Use `ZodError.issues` over `errors` when building error messages.\n>   - Minor signature/formatting adjustments.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 0c887c50cf6a0db585a330647d592721b6a416d2. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n* **Refactor**\n  * Streamlined message handling to call the message service directly for faster, more reliable incoming message processing.\n  * Preserved document processing behavior and configuration validation while improving internal robustness and guards.\n\n* **Style**\n  * Applied consistent formatting and string-style updates; no user-visible behavior changes.\n\n* **Chores**\n  * Removed an unused internal type from the public import surface.\n  * Improved error logging for clearer diagnostic messages.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/plugin-telegram",
      "createdAt": "2025-10-09T03:24:49Z",
      "mergedAt": "2025-10-20T12:35:21Z",
      "additions": 76,
      "deletions": 61
    }
  ],
  "codeChanges": {
    "additions": 795,
    "deletions": 377,
    "files": 9,
    "commitCount": 9
  },
  "completedItems": [
    {
      "title": "feat: migrate to runtime.handleMessage()",
      "prNumber": 17,
      "type": "feature",
      "body": "Migrates Telegram plugin from event-based message handling to direct\r\nMessageService calls, making message flow easier to trace and debug.\r\n\r\nChanges:\r\n- Replace runtime.emitEvent(MESSAGE_RECEIVED) with runtime.handleMessage()\r\n- Remove unu",
      "files": [
        "src/environment.ts",
        "src/messageManager.ts"
      ]
    },
    {
      "title": "fix: resolve button handling crash and logging errors",
      "prNumber": 19,
      "type": "bugfix",
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Safely converts Telegram buttons with validation and fallbacks, improves structured logging, expands test coverage, and updates package/core versions.\n> \n> - **Utils**:\n>   - `convertToTelegramButtons`: v",
      "files": [
        "__tests__/button-conversion.test.ts",
        "__tests__/messageManager.test.ts",
        "__tests__/telegramClient.test.ts",
        "__tests__/utils.test.ts",
        "bun.lock",
        "package.json",
        "src/messageManager.ts",
        "src/utils.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 233.33804740403872,
      "prScore": 232.9000474040387,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 84.56979365705216,
      "prScore": 79.56979365705216,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "madjin",
      "avatarUrl": "https://avatars.githubusercontent.com/u/32600939?u=cdcf89f44c7a50906c7a80d889efa85023af2049&v=4",
      "totalScore": 74.3994212894945,
      "prScore": 72.1994212894945,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 62.28621552128668,
      "prScore": 62.28621552128668,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "0xRabbidfly",
      "avatarUrl": "https://avatars.githubusercontent.com/u/93952856?v=4",
      "totalScore": 33.90101911726088,
      "prScore": 33.90101911726088,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 21.525573590279972,
      "prScore": 21.525573590279972,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 0.6799999999999999,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.6799999999999999,
      "summary": null
    },
    {
      "username": "letmehateu",
      "avatarUrl": "https://avatars.githubusercontent.com/u/133153661?u=2217cec1ebd7bf22a8e4e3ace28b3183720dd444&v=4",
      "totalScore": 0.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    }
  ],
  "newPRs": 2,
  "mergedPRs": 2,
  "newIssues": 0,
  "closedIssues": 0,
  "activeContributors": 3
}