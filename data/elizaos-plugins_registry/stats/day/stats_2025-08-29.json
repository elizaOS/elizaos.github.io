{
  "interval": {
    "intervalStart": "2025-08-29T00:00:00.000Z",
    "intervalEnd": "2025-08-30T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos-plugins/registry",
  "overview": "From 2025-08-29 to 2025-08-30, elizaos-plugins/registry had 2 new PRs (1 merged), 0 new issues, and 4 active contributors.",
  "topIssues": [],
  "topPRs": [
    {
      "id": "PR_kwDONkg7v86l4veE",
      "title": "Add plugin-raids to registry",
      "author": "Dexploarer",
      "number": 210,
      "body": "This PR adds plugin-raids to the registry.\n\n- Package name: plugin-raids\n- GitHub repository: github:dexploarer/plugin-raids\n- Version: 1.0.0\n- Description: Promptordie plugin for social media raid management and automation\n\nSubmitted by: @dexploarer\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **Documentation**\n  * Added the RSS Feed plugin to the Available Plugins list with a link; no functional changes.\n\n* **Chores**\n  * Updated the plugin registry to include new entries for “@elizaos/plugins/plugin-vercel-ai-gateway” and “plugin-raids,” improving discovery and installation.\n  * Minor formatting adjustments to maintain consistency.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-08-28T22:11:42Z",
      "mergedAt": null,
      "additions": 4261,
      "deletions": 253
    },
    {
      "id": "PR_kwDONkg7v86l_gVE",
      "title": "Fix: Resolve React rendering error for author objects in plugin registry",
      "author": "wtfsayo",
      "number": 211,
      "body": "## Problem\n\nThe local development server was crashing with a React rendering error:\n```\nObjects are not valid as a React child (found: object with keys {name, email})\n```\n\nThis occurred because some package.json files in plugin repositories have the `author` field as an object with `name` and `email` properties, rather than a simple string. React cannot render objects directly as children, causing the application to crash.\n\n## Root Cause\n\nIn the plugin registry app, when fetching package.json files from GitHub repositories, the code was directly using `content.author` without checking if it was an object or string. When package.json contained:\n```json\n{\n  \"author\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  }\n}\n```\n\nInstead of:\n```json\n{\n  \"author\": \"John Doe\"\n}\n```\n\nReact would try to render the object directly, causing the error.\n\n## Solution\n\n### 1. Author Field Handling\n- Added proper type checking for the `author` field\n- Extract `name` or `email` from author objects gracefully\n- Fallback to 'unknown' if neither is available\n\n### 2. Enhanced Error Handling\n- Improved network error handling for package.json fetches\n- Better error boundaries for missing or malformed data\n- More robust fallback mechanisms\n\n### 3. TypeScript Improvements\n- Fixed type safety for error state (`string | null` instead of `null`)\n- Added proper fallback values for missing fields\n\n### 4. Code Structure Improvements\n- Refactored nested try-catch blocks for better readability\n- Consolidated content handling logic\n- Added comprehensive error logging\n\n## Changes Made\n\n```typescript\n// Before\nauthor: content.author,\n\n// After\nauthor: typeof content.author === 'object' \n  ? content.author?.name || content.author?.email || 'unknown'\n  : content.author || 'unknown',\n```\n\n## Testing\n\n- ✅ Local development server runs without React rendering errors\n- ✅ Plugin registry loads successfully with mixed author field types\n- ✅ Graceful handling of 404s for missing package.json files\n- ✅ Proper fallbacks for missing or malformed data\n- ✅ TypeScript compilation without errors\n\n## Impact\n\n- Fixes critical React rendering crash in local development\n- Improves robustness of plugin data fetching\n- Better user experience with graceful error handling\n- Maintains backward compatibility with existing string-based authors\n\nThis fix ensures the plugin registry can handle the variety of package.json formats found in the ElizaOS plugin ecosystem without crashing.\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features\n  - More resilient plugin loading with validation and graceful fallbacks, ensuring the plugin list populates even under network issues.\n  - Displays partial plugin info with sensible defaults (version, description, author) when data is missing.\n  - Improved author handling from various formats for clearer attribution.\n\n- Bug Fixes\n  - Prevents crashes/blank states caused by malformed or missing plugin data.\n  - Ignores invalid registry entries to reduce broken or noisy listings.\n  - Provides clearer error states when plugin details can’t be fully retrieved.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-08-29T13:22:36Z",
      "mergedAt": "2025-08-29T13:24:27Z",
      "additions": 4257,
      "deletions": 250
    },
    {
      "id": "PR_kwDONkg7v86ZI6WE",
      "title": "Create CONTRIBUTING.md",
      "author": "Dexploarer",
      "number": 163,
      "body": "# Registry Update Checklist\r\n\r\nRegistry:\r\n- [x] I've made the left side of the colon of JSON entry in index.json match the potential NPM package name\r\n- [x] I've used github not github.com\r\n- [x] There is no .git extension\r\n- [x] It's placed it alphabetically in the list\r\n- [x] I've dealt with commas properly so the list is still valid JSON\r\n\r\nIf not an eliza-plugins official repo, i.e. new plugin: \r\n\r\nThe plugin repo has:\r\n- [x] is publically accessible (not a private repo)\r\n- [x] uses main as it's default branch\r\n- [x] I have include `elizaos-plugins` in the topics in the GitHub repo settings. If the plugin is related to `AI` or `crypto`, please add those as topics as well.\r\n- [x] add simple description in github repo\r\n- [x] follows this convention\r\n```\r\nplugin-name/\r\n├── images/\r\n│   ├── logo.jpg        # Plugin branding logo\r\n│   ├── banner.jpg      # Plugin banner image\r\n├── src/\r\n│   ├── index.ts        # Main plugin entry point\r\n│   ├── actions/        # Plugin-specific actions\r\n│   ├── clients/        # Client implementations\r\n│   ├── adapters/       # Adapter implementations\r\n│   └── types.ts        # Type definitions\r\n│   └── environment.ts  # runtime.getSetting, zod validation\r\n├── package.json        # Plugin dependencies\r\n└── README.md          # Plugin documentation\r\n```\r\n- [ ] an `images/banner.jpg` and `images/logo.jpg` and they\r\n  - Use clear, high-resolution images\r\n  - Keep file sizes optimized (< 500KB for logos, < 1MB for banners)\r\n  - Follow the [elizaOS Brand Guidelines](https://github.com/elizaOS/brandkit)\r\n  - Include alt text for accessibility\r\n- [x] package.json has a agentConfig like the following\r\n```json\r\n{\r\n  \"name\": \"@myNpmOrg/plugin-example\",\r\n  \"version\": \"1.0.0\",\r\n  \"agentConfig\": {\r\n    \"pluginType\": \"elizaos:plugin:1.0.0\",\r\n    \"pluginParameters\": {\r\n      \"API_KEY\": {\r\n        \"type\": \"string\",\r\n        \"description\": \"API key for the service\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/elizaOS and state your Discord username here for the contributor role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **Documentation**\n  - Added a comprehensive contribution guide detailing how to develop, test, document, and submit plugins to the ElizaOS Plugin Registry.\n  - Includes standards for plugin quality, repository structure, package configuration, testing, and submission.\n  - Outlines review processes, plugin categories, recognition programs, community engagement channels, and future roadmap.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-06-05T06:25:05Z",
      "mergedAt": null,
      "additions": 434,
      "deletions": 0
    },
    {
      "id": "PR_kwDONkg7v86ZI2kr",
      "title": "Create LICENSE",
      "author": "Dexploarer",
      "number": 162,
      "body": "# Registry Update Checklist\r\n\r\nRegistry:\r\n- [ ] I've made the left side of the colon of JSON entry in index.json match the potential NPM package name\r\n- [ ] I've used github not github.com\r\n- [ ] There is no .git extension\r\n- [ ] It's placed it alphabetically in the list\r\n- [ ] I've dealt with commas properly so the list is still valid JSON\r\n\r\nIf not an eliza-plugins official repo, i.e. new plugin: \r\n\r\nThe plugin repo has:\r\n- [ ] is publically accessible (not a private repo)\r\n- [ ] uses main as it's default branch\r\n- [ ] I have include `elizaos-plugins` in the topics in the GitHub repo settings. If the plugin is related to `AI` or `crypto`, please add those as topics as well.\r\n- [ ] add simple description in github repo\r\n- [ ] follows this convention\r\n```\r\nplugin-name/\r\n├── images/\r\n│   ├── logo.jpg        # Plugin branding logo\r\n│   ├── banner.jpg      # Plugin banner image\r\n├── src/\r\n│   ├── index.ts        # Main plugin entry point\r\n│   ├── actions/        # Plugin-specific actions\r\n│   ├── clients/        # Client implementations\r\n│   ├── adapters/       # Adapter implementations\r\n│   └── types.ts        # Type definitions\r\n│   └── environment.ts  # runtime.getSetting, zod validation\r\n├── package.json        # Plugin dependencies\r\n└── README.md          # Plugin documentation\r\n```\r\n- [ ] an `images/banner.jpg` and `images/logo.jpg` and they\r\n  - Use clear, high-resolution images\r\n  - Keep file sizes optimized (< 500KB for logos, < 1MB for banners)\r\n  - Follow the [elizaOS Brand Guidelines](https://github.com/elizaOS/brandkit)\r\n  - Include alt text for accessibility\r\n- [ ] package.json has a agentConfig like the following\r\n```json\r\n{\r\n  \"name\": \"@myNpmOrg/plugin-example\",\r\n  \"version\": \"1.0.0\",\r\n  \"agentConfig\": {\r\n    \"pluginType\": \"elizaos:plugin:1.0.0\",\r\n    \"pluginParameters\": {\r\n      \"API_KEY\": {\r\n        \"type\": \"string\",\r\n        \"description\": \"API key for the service\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/elizaOS and state your Discord username here for the contributor role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-06-05T06:15:45Z",
      "mergedAt": null,
      "additions": 21,
      "deletions": 0
    },
    {
      "id": "PR_kwDONkg7v86ZnwvT",
      "title": "Added RSS Plugin",
      "author": "Dexploarer",
      "number": 171,
      "body": "# Registry Update Checklist\r\n\r\nRegistry:\r\n- [ ] I've made the left side of the colon of JSON entry in index.json match the potential NPM package name\r\n- [ ] I've used github not github.com\r\n- [ ] There is no .git extension\r\n- [ ] It's placed it alphabetically in the list\r\n- [ ] I've dealt with commas properly so the list is still valid JSON\r\n\r\nIf not an eliza-plugins official repo, i.e. new plugin: \r\n\r\nThe plugin repo has:\r\n- [ ] is publically accessible (not a private repo)\r\n- [ ] uses main as it's default branch\r\n- [ ] I have include `elizaos-plugins` in the topics in the GitHub repo settings. If the plugin is related to `AI` or `crypto`, please add those as topics as well.\r\n- [ ] add simple description in github repo\r\n- [ ] follows this convention\r\n```\r\nplugin-name/\r\n├── images/\r\n│   ├── logo.jpg        # Plugin branding logo\r\n│   ├── banner.jpg      # Plugin banner image\r\n├── src/\r\n│   ├── index.ts        # Main plugin entry point\r\n│   ├── actions/        # Plugin-specific actions\r\n│   ├── clients/        # Client implementations\r\n│   ├── adapters/       # Adapter implementations\r\n│   └── types.ts        # Type definitions\r\n│   └── environment.ts  # runtime.getSetting, zod validation\r\n├── package.json        # Plugin dependencies\r\n└── README.md          # Plugin documentation\r\n```\r\n- [ ] an `images/banner.jpg` and `images/logo.jpg` and they\r\n  - Use clear, high-resolution images\r\n  - Keep file sizes optimized (< 500KB for logos, < 1MB for banners)\r\n  - Follow the [elizaOS Brand Guidelines](https://github.com/elizaOS/brandkit)\r\n  - Include alt text for accessibility\r\n- [ ] package.json has a agentConfig like the following\r\n```json\r\n{\r\n  \"name\": \"@myNpmOrg/plugin-example\",\r\n  \"version\": \"1.0.0\",\r\n  \"agentConfig\": {\r\n    \"pluginType\": \"elizaos:plugin:1.0.0\",\r\n    \"pluginParameters\": {\r\n      \"API_KEY\": {\r\n        \"type\": \"string\",\r\n        \"description\": \"API key for the service\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/elizaOS and state your Discord username here for the contributor role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-06-09T04:39:10Z",
      "mergedAt": null,
      "additions": 3,
      "deletions": 2
    }
  ],
  "codeChanges": {
    "additions": 4257,
    "deletions": 250,
    "files": 3,
    "commitCount": 15
  },
  "completedItems": [
    {
      "title": "Fix: Resolve React rendering error for author objects in plugin registry",
      "prNumber": 211,
      "type": "bugfix",
      "body": "## Problem\n\nThe local development server was crashing with a React rendering error:\n```\nObjects are not valid as a React child (found: object with keys {name, email})\n```\n\nThis occurred because some package.json files in plugin repositories",
      "files": [
        "package-lock.json",
        "site/package-lock.json",
        "site/src/App.tsx"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 56.3507738965761,
      "prScore": 56.3507738965761,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 35.23813216897283,
      "prScore": 35.03813216897283,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 32.091563680037474,
      "prScore": 32.091563680037474,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "mmalik-al",
      "avatarUrl": "https://avatars.githubusercontent.com/u/144422633?u=986f63acb4dee076448142e0a724f1c4419543d3&v=4",
      "totalScore": 12.778306144334056,
      "prScore": 12.778306144334056,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 2,
  "mergedPRs": 1,
  "newIssues": 0,
  "closedIssues": 0,
  "activeContributors": 4
}