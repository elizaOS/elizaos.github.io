{
  "interval": {
    "intervalStart": "2025-08-24T00:00:00.000Z",
    "intervalEnd": "2025-08-31T00:00:00.000Z",
    "intervalType": "week"
  },
  "repository": "elizaos-plugins/registry",
  "overview": "From 2025-08-24 to 2025-08-31, elizaos-plugins/registry had 10 new PRs (7 merged), 0 new issues, and 16 active contributors.",
  "topIssues": [],
  "topPRs": [
    {
      "id": "PR_kwDONkg7v86l4veE",
      "title": "Add plugin-raids to registry",
      "author": "Dexploarer",
      "number": 210,
      "body": "This PR adds plugin-raids to the registry.\n\n- Package name: plugin-raids\n- GitHub repository: github:dexploarer/plugin-raids\n- Version: 1.0.0\n- Description: Promptordie plugin for social media raid management and automation\n\nSubmitted by: @dexploarer\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **Documentation**\n  * Added the RSS Feed plugin to the Available Plugins list with a link; no functional changes.\n\n* **Chores**\n  * Updated the plugin registry to include new entries for ‚Äú@elizaos/plugins/plugin-vercel-ai-gateway‚Äù and ‚Äúplugin-raids,‚Äù improving discovery and installation.\n  * Minor formatting adjustments to maintain consistency.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-08-28T22:11:42Z",
      "mergedAt": null,
      "additions": 4261,
      "deletions": 253
    },
    {
      "id": "PR_kwDONkg7v86l_gVE",
      "title": "Fix: Resolve React rendering error for author objects in plugin registry",
      "author": "wtfsayo",
      "number": 211,
      "body": "## Problem\n\nThe local development server was crashing with a React rendering error:\n```\nObjects are not valid as a React child (found: object with keys {name, email})\n```\n\nThis occurred because some package.json files in plugin repositories have the `author` field as an object with `name` and `email` properties, rather than a simple string. React cannot render objects directly as children, causing the application to crash.\n\n## Root Cause\n\nIn the plugin registry app, when fetching package.json files from GitHub repositories, the code was directly using `content.author` without checking if it was an object or string. When package.json contained:\n```json\n{\n  \"author\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  }\n}\n```\n\nInstead of:\n```json\n{\n  \"author\": \"John Doe\"\n}\n```\n\nReact would try to render the object directly, causing the error.\n\n## Solution\n\n### 1. Author Field Handling\n- Added proper type checking for the `author` field\n- Extract `name` or `email` from author objects gracefully\n- Fallback to 'unknown' if neither is available\n\n### 2. Enhanced Error Handling\n- Improved network error handling for package.json fetches\n- Better error boundaries for missing or malformed data\n- More robust fallback mechanisms\n\n### 3. TypeScript Improvements\n- Fixed type safety for error state (`string | null` instead of `null`)\n- Added proper fallback values for missing fields\n\n### 4. Code Structure Improvements\n- Refactored nested try-catch blocks for better readability\n- Consolidated content handling logic\n- Added comprehensive error logging\n\n## Changes Made\n\n```typescript\n// Before\nauthor: content.author,\n\n// After\nauthor: typeof content.author === 'object' \n  ? content.author?.name || content.author?.email || 'unknown'\n  : content.author || 'unknown',\n```\n\n## Testing\n\n- ‚úÖ Local development server runs without React rendering errors\n- ‚úÖ Plugin registry loads successfully with mixed author field types\n- ‚úÖ Graceful handling of 404s for missing package.json files\n- ‚úÖ Proper fallbacks for missing or malformed data\n- ‚úÖ TypeScript compilation without errors\n\n## Impact\n\n- Fixes critical React rendering crash in local development\n- Improves robustness of plugin data fetching\n- Better user experience with graceful error handling\n- Maintains backward compatibility with existing string-based authors\n\nThis fix ensures the plugin registry can handle the variety of package.json formats found in the ElizaOS plugin ecosystem without crashing.\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- New Features\n  - More resilient plugin loading with validation and graceful fallbacks, ensuring the plugin list populates even under network issues.\n  - Displays partial plugin info with sensible defaults (version, description, author) when data is missing.\n  - Improved author handling from various formats for clearer attribution.\n\n- Bug Fixes\n  - Prevents crashes/blank states caused by malformed or missing plugin data.\n  - Ignores invalid registry entries to reduce broken or noisy listings.\n  - Provides clearer error states when plugin details can‚Äôt be fully retrieved.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-08-29T13:22:36Z",
      "mergedAt": "2025-08-29T13:24:27Z",
      "additions": 4257,
      "deletions": 250
    },
    {
      "id": "PR_kwDONkg7v86ZI6WE",
      "title": "Create CONTRIBUTING.md",
      "author": "Dexploarer",
      "number": 163,
      "body": "# Registry Update Checklist\r\n\r\nRegistry:\r\n- [x] I've made the left side of the colon of JSON entry in index.json match the potential NPM package name\r\n- [x] I've used github not github.com\r\n- [x] There is no .git extension\r\n- [x] It's placed it alphabetically in the list\r\n- [x] I've dealt with commas properly so the list is still valid JSON\r\n\r\nIf not an eliza-plugins official repo, i.e. new plugin: \r\n\r\nThe plugin repo has:\r\n- [x] is publically accessible (not a private repo)\r\n- [x] uses main as it's default branch\r\n- [x] I have include `elizaos-plugins` in the topics in the GitHub repo settings. If the plugin is related to `AI` or `crypto`, please add those as topics as well.\r\n- [x] add simple description in github repo\r\n- [x] follows this convention\r\n```\r\nplugin-name/\r\n‚îú‚îÄ‚îÄ images/\r\n‚îÇ   ‚îú‚îÄ‚îÄ logo.jpg        # Plugin branding logo\r\n‚îÇ   ‚îú‚îÄ‚îÄ banner.jpg      # Plugin banner image\r\n‚îú‚îÄ‚îÄ src/\r\n‚îÇ   ‚îú‚îÄ‚îÄ index.ts        # Main plugin entry point\r\n‚îÇ   ‚îú‚îÄ‚îÄ actions/        # Plugin-specific actions\r\n‚îÇ   ‚îú‚îÄ‚îÄ clients/        # Client implementations\r\n‚îÇ   ‚îú‚îÄ‚îÄ adapters/       # Adapter implementations\r\n‚îÇ   ‚îî‚îÄ‚îÄ types.ts        # Type definitions\r\n‚îÇ   ‚îî‚îÄ‚îÄ environment.ts  # runtime.getSetting, zod validation\r\n‚îú‚îÄ‚îÄ package.json        # Plugin dependencies\r\n‚îî‚îÄ‚îÄ README.md          # Plugin documentation\r\n```\r\n- [ ] an `images/banner.jpg` and `images/logo.jpg` and they\r\n  - Use clear, high-resolution images\r\n  - Keep file sizes optimized (< 500KB for logos, < 1MB for banners)\r\n  - Follow the [elizaOS Brand Guidelines](https://github.com/elizaOS/brandkit)\r\n  - Include alt text for accessibility\r\n- [x] package.json has a agentConfig like the following\r\n```json\r\n{\r\n  \"name\": \"@myNpmOrg/plugin-example\",\r\n  \"version\": \"1.0.0\",\r\n  \"agentConfig\": {\r\n    \"pluginType\": \"elizaos:plugin:1.0.0\",\r\n    \"pluginParameters\": {\r\n      \"API_KEY\": {\r\n        \"type\": \"string\",\r\n        \"description\": \"API key for the service\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- If you are on Discord, please join https://discord.gg/elizaOS and state your Discord username here for the contributor role and join us in #development-feed -->\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **Documentation**\n  - Added a comprehensive contribution guide detailing how to develop, test, document, and submit plugins to the ElizaOS Plugin Registry.\n  - Includes standards for plugin quality, repository structure, package configuration, testing, and submission.\n  - Outlines review processes, plugin categories, recognition programs, community engagement channels, and future roadmap.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-06-05T06:25:05Z",
      "mergedAt": null,
      "additions": 434,
      "deletions": 0
    },
    {
      "id": "PR_kwDONkg7v86ldZGG",
      "title": "Add Claude Code GitHub Workflow",
      "author": "wtfsayo",
      "number": 206,
      "body": "## ü§ñ Installing Claude Code GitHub App\r\n\r\nThis PR adds a GitHub Actions workflow that enables Claude Code integration in our repository.\r\n\r\n### What is Claude Code?\r\n\r\n[Claude Code](https://claude.ai/code) is an AI coding agent that can help with:\r\n- Bug fixes and improvements  \r\n- Documentation updates\r\n- Implementing new features\r\n- Code reviews and suggestions\r\n- Writing tests\r\n- And more!\r\n\r\n### How it works\r\n\r\nOnce this PR is merged, we'll be able to interact with Claude by mentioning @claude in a pull request or issue comment.\r\nOnce the workflow is triggered, Claude will analyze the comment and surrounding context, and execute on the request in a GitHub action.\r\n\r\n### Important Notes\r\n\r\n- **This workflow won't take effect until this PR is merged**\r\n- **@claude mentions won't work until after the merge is complete**\r\n- The workflow runs automatically whenever Claude is mentioned in PR or issue comments\r\n- Claude gets access to the entire PR or issue context including files, diffs, and previous comments\r\n\r\n### Security\r\n\r\n- Our Anthropic API key is securely stored as a GitHub Actions secret\r\n- Only users with write access to the repository can trigger the workflow\r\n- All Claude runs are stored in the GitHub Actions run history\r\n- Claude's default tools are limited to reading/writing files and interacting with our repo by creating comments, branches, and commits.\r\n- We can add more allowed tools by adding them to the workflow file like:\r\n\r\n```\r\nallowed_tools: Bash(npm install),Bash(npm run build),Bash(npm run lint),Bash(npm run test)\r\n```\r\n\r\nThere's more information in the [Claude Code action repo](https://github.com/anthropics/claude-code-action).\r\n\r\nAfter merging this PR, let's try mentioning @claude in a comment on any PR to get started!\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **Chores**\n  * Introduced AI-assisted workflows in GitHub.\n    * Automatic code reviews on pull requests to flag quality, performance, security, and testing issues.\n    * On-demand code generation/analysis triggered by commenting @claude on issues or PRs.\n    * Prepared configurable options (models, prompts, allowed tools, skip rules) for future tuning.\n  * No user-facing product changes.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-08-26T17:40:59Z",
      "mergedAt": "2025-08-26T17:43:00Z",
      "additions": 142,
      "deletions": 0
    },
    {
      "id": "PR_kwDONkg7v86kqeIj",
      "title": "Add AI Gateway Plugin to ElizaOS Registry",
      "author": "Dexploarer",
      "number": 203,
      "body": "## Summary\n‚Ä¢ Add @elizaos-plugins/plugin-aigateway to the plugin registry\n‚Ä¢ Universal AI Gateway integration plugin for elizaOS\n‚Ä¢ Provides access to 100+ AI models through unified gateways\n\n## Plugin Details\n- **Repository**: https://github.com/dexploarer/plugin-aigateway\n- **Package**: @elizaos/plugin-aigateway\n- **Version**: 1.0.0\n- **Features**: Text generation, image generation, embeddings, model listing\n- **Supported Gateways**: Vercel AI Gateway, OpenRouter, and custom gateways\n\n## Quality Assurance\n‚úÖ All tests pass (25/25)\n‚úÖ Clean TypeScript build\n‚úÖ Code formatted with prettier\n‚úÖ No console.log statements in production code\n‚úÖ Follows ElizaOS plugin architecture\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- Documentation\n  - Added RSS feed plugin to the Available Plugins list in README.\n\n- Chores\n  - Updated registry metadata: added @elizaos-plugins/plugin-rss-feed, @elizaos/plugin-twitter-rss, and @elizaos-plugins/plugin-aigateway.\n  - Bumped patch versions for multiple plugins and removed several v1 branch pins.\n  - Adjusted supports flags and updated last updated timestamp.\n  - Expanded index with mappings for the new plugins.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/registry",
      "createdAt": "2025-08-21T11:03:50Z",
      "mergedAt": null,
      "additions": 106,
      "deletions": 59
    }
  ],
  "codeChanges": {
    "additions": 4514,
    "deletions": 279,
    "files": 8,
    "commitCount": 40
  },
  "completedItems": [
    {
      "title": "feat: add TokenMetrics plugin to registry",
      "prNumber": 182,
      "type": "feature",
      "body": "## üéØ Plugin Submission: Token Metrics Crypto Trading & Market Data Plugin\r\n\r\n### üìã Plugin Details\r\n- **Package Name**: `@elizaos/plugin-tokenmetrics`\r\n- **Repository**: https://github.com/token-metrics/plugin-tokenmetrics\r\n- **Category**:",
      "files": [
        "index.json"
      ]
    },
    {
      "title": "Enhance Claude Code review workflow with comprehensive validation",
      "prNumber": 208,
      "type": "other",
      "body": "## Summary\nEnhanced the Claude Code review workflow to provide comprehensive validation for plugin registry contributions:\n\n‚Ä¢ **NPM Package Validation**: Uses `npm view` to verify packages exist before accepting registry entries\n‚Ä¢ **GitHub ",
      "files": [
        ".github/workflows/claude-code-review.yml",
        "README.md"
      ]
    },
    {
      "title": "feat: add alphabetical sorting to registry generation",
      "prNumber": 207,
      "type": "feature",
      "body": "## Summary\n- Add alphabetical sorting to registry generation process\n- Sort entries by key during processing to ensure consistent order\n- Sort the final registry output by keys\n- Clean up and alphabetically sort index.json\n- Remove invalid ",
      "files": [
        "index.json",
        "scripts/generate-registry.js"
      ]
    },
    {
      "title": "Add Claude Code GitHub Workflow",
      "prNumber": 206,
      "type": "other",
      "body": "## ü§ñ Installing Claude Code GitHub App\r\n\r\nThis PR adds a GitHub Actions workflow that enables Claude Code integration in our repository.\r\n\r\n### What is Claude Code?\r\n\r\n[Claude Code](https://claude.ai/code) is an AI coding agent that can he",
      "files": [
        ".github/workflows/claude-code-review.yml",
        ".github/workflows/claude.yml"
      ]
    },
    {
      "title": "added plugin polymarket to the registry",
      "prNumber": 205,
      "type": "other",
      "body": "# Registry Update Checklist\r\n\r\nRegistry:\r\n- [ x] I've made the left side of the colon of JSON entry in index.json match the potential NPM package name\r\n- [x ] I've used github not github.com\r\n- [ x] There is no .git extension\r\n- [ x] It's p",
      "files": [
        "index.json"
      ]
    },
    {
      "title": "Add @standujar/plugin-composio to registry",
      "prNumber": 209,
      "type": "other",
      "body": "\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **New Features**\n  * Added support for the @standujar/plugin-composio plugin in the public plugin registry, making it discoverable and",
      "files": [
        "index.json"
      ]
    },
    {
      "title": "Fix: Resolve React rendering error for author objects in plugin registry",
      "prNumber": 211,
      "type": "bugfix",
      "body": "## Problem\n\nThe local development server was crashing with a React rendering error:\n```\nObjects are not valid as a React child (found: object with keys {name, email})\n```\n\nThis occurred because some package.json files in plugin repositories",
      "files": [
        "package-lock.json",
        "site/package-lock.json",
        "site/src/App.tsx"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 380.05273852310404,
      "prScore": 369.07473852310403,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0.978,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 289.9295911791509,
      "prScore": 270.9295911791509,
      "issueScore": 0,
      "reviewScore": 19,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 150.38145299797947,
      "prScore": 134.40345299797946,
      "issueScore": 0,
      "reviewScore": 15,
      "commentScore": 0.978,
      "summary": null
    },
    {
      "username": "standujar",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16385918?u=718bdcd1585be8447bdfffb8c11ce249baa7532d&v=4",
      "totalScore": 76.51782801798313,
      "prScore": 61.81782801798314,
      "issueScore": 0,
      "reviewScore": 14.5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 54.37252866480763,
      "prScore": 22.67252866480763,
      "issueScore": 0,
      "reviewScore": 31.5,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4",
      "totalScore": 43.7437738965761,
      "prScore": 43.5437738965761,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    },
    {
      "username": "shiedot",
      "avatarUrl": "https://avatars.githubusercontent.com/u/115964822?v=4",
      "totalScore": 40.4257738965761,
      "prScore": 40.4257738965761,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 39.32966420769526,
      "prScore": 39.32966420769526,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "Dexploarer",
      "avatarUrl": "https://avatars.githubusercontent.com/u/211557447?u=21a243d61cc1f87574328ae07fc64d7d7577b53d&v=4",
      "totalScore": 35.23424320856334,
      "prScore": 30.73424320856334,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "theSchein",
      "avatarUrl": "https://avatars.githubusercontent.com/u/4759807?u=1367e8e3307b02aef996d930feafa29937ccb5b9&v=4",
      "totalScore": 28.623573590279975,
      "prScore": 28.623573590279975,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 27.102759890378167,
      "prScore": 22.102759890378167,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "prestoalvarez",
      "avatarUrl": "https://avatars.githubusercontent.com/u/140459501?u=b843478cdfec2bca070ff99ebb65f8f6a8161aba&v=4",
      "totalScore": 21.419306144334055,
      "prScore": 21.419306144334055,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "mmalik-al",
      "avatarUrl": "https://avatars.githubusercontent.com/u/144422633?u=986f63acb4dee076448142e0a724f1c4419543d3&v=4",
      "totalScore": 12.778306144334056,
      "prScore": 12.778306144334056,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "borisudovicic",
      "avatarUrl": "https://avatars.githubusercontent.com/u/31806472?u=27713fbe603baae91ef519990facbacd6c23e93d&v=4",
      "totalScore": 6,
      "prScore": 0,
      "issueScore": 6,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "claude",
      "avatarUrl": "https://avatars.githubusercontent.com/in/1236702?v=4",
      "totalScore": 4.938,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "linear",
      "avatarUrl": "https://avatars.githubusercontent.com/in/20150?v=4",
      "totalScore": 4,
      "prScore": 0,
      "issueScore": 4,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "SavannahOz",
      "avatarUrl": "https://avatars.githubusercontent.com/u/227312217?v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "1BDO",
      "avatarUrl": "https://avatars.githubusercontent.com/u/210645034?v=4",
      "totalScore": 2,
      "prScore": 0,
      "issueScore": 2,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ashuxshimra",
      "avatarUrl": "https://avatars.githubusercontent.com/u/105487009?u=23e8a61486d8a47efc1734ae7fdb61ccb191f349&v=4",
      "totalScore": 0.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    }
  ],
  "newPRs": 10,
  "mergedPRs": 7,
  "newIssues": 0,
  "closedIssues": 0,
  "activeContributors": 16
}