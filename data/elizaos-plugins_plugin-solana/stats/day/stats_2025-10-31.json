{
  "interval": {
    "intervalStart": "2025-10-31T00:00:00.000Z",
    "intervalEnd": "2025-11-01T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos-plugins/plugin-solana",
  "overview": "From 2025-10-31 to 2025-11-01, elizaos-plugins/plugin-solana had 3 new PRs (0 merged), 0 new issues, and 1 active contributors.",
  "topIssues": [],
  "topPRs": [
    {
      "id": "PR_kwDONkwLhs6wvd49",
      "title": "multichain/exchange api work, tx system refactor and token2022 improvements",
      "author": "odilitime",
      "number": 24,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Adds exchange-driven swap execution, robust Token‑2022 metadata parsing, and a refactored transaction/portfolio flow; also registers Solana nets with INTEL_CHAIN.\n> \n> - **Solana Service**:\n>   - **Exchange API**: Add registry and `doSwapOnExchange`, plus `getSwapAmounts`; basic `selectExchange`.\n>   - **Transaction refactor**: Introduce `buildAndSendTransaction` and unify send via `sendTx`; add `transferSplToken` and `executeCustomTransaction`; update `transferSol` to new flow.\n>   - **Token‑2022 support**: Implement TLV parsing (`parseTLVExtensions`, `parseToken2022MetadataExtension`, `parseToken2022SymbolFromMintOrPtr`); enhance `getTokensSymbols` and `parseTokenAccounts` (supply/decimals caching, isMutable, program detection).\n>   - **Wallet/portfolio**: Add subscription-driven refresh in `ensurePublicKey`; add `getCachedData`; streamline `updateWalletData` fallback; improve `getBalancesByAddrs` handling and add `getPubkeyFromSecret`.\n> - **Wallet Service**:\n>   - Lazy-init linkage to main service; delegate `transferSol`; make balance lookups tolerate nulls; `getTokenAccountsByKeypairs` returns nullable arrays.\n> - **Plugin (index.ts)**:\n>   - Register multiple Solana networks (`mainnet`, `devnet`, `testnet`, `localnet`) with `INTEL_CHAIN` including RPC URLs.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit c438b704e3576391d2c7f5f61638c709ccc663da. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **New Features**\n  * Added support for multiple Solana networks (mainnet, devnet, testnet, localnet)\n  * Implemented token swap and exchange functionality\n  * Enhanced token metadata handling and support\n  * Added wallet data caching and refresh capabilities\n  * Enabled direct SOL and SPL token transfers with improved transaction reliability\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/plugin-solana",
      "createdAt": "2025-10-31T02:43:16Z",
      "mergedAt": null,
      "additions": 1023,
      "deletions": 592
    },
    {
      "id": "PR_kwDONkwLhs6wvYgu",
      "title": "caLookupProvider (if not spartan-intel)",
      "author": "odilitime",
      "number": 23,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Introduces a Solana CA lookup provider to fetch on-chain token details from message addresses and registers it only when spartan-intel isn't loaded, with comprehensive tests.\n> \n> - **Providers**:\n>   - Add `src/providers/ca-lookup.ts` (`SOLANA_CA_SYMBOL_LOOKUP`) to extract addresses from messages and fetch on-chain token data (`symbol`, `type`, `decimals`, `supply`), filtering non-token addresses and handling errors.\n> - **Plugin Init (`src/index.ts`)**:\n>   - Conditionally register `caLookupProvider` only if `spartan-intel` plugin is absent; minor logging/formatting tweaks.\n> - **Tests**:\n>   - Add `__tests__/providers/ca-lookup.test.ts` covering no addresses, single/multiple addresses, missing service, non-token filtering, error handling, and provider metadata.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 8be9e87abc5314c1ab38f11fd8e834144d469026. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n* **New Features**\n  * Added a Solana CA symbol lookup that retrieves token symbol, type, decimals, and supply for detected on-chain addresses.\n  * Provider registration now conditionally skips adding the lookup when an overlapping plugin is present to avoid duplicate registration.\n\n* **Tests**\n  * Added comprehensive tests validating address extraction, token filtering, error paths, and provider metadata.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/plugin-solana",
      "createdAt": "2025-10-31T02:24:58Z",
      "mergedAt": null,
      "additions": 323,
      "deletions": 2
    },
    {
      "id": "PR_kwDONkwLhs6wu7Um",
      "title": "Enable typechecks in build, stricter TypeScript (remove node types) + vitest => bun test",
      "author": "odilitime",
      "number": 22,
      "body": "<!-- CURSOR_SUMMARY -->\n> [!NOTE]\n> Moves to Bun-centric strict TypeScript with pre-build typechecking, adds config guard tests, improves SOL swap handling, and switches tests to bun.\n> \n> - **TypeScript/Build**\n>   - Add `tsconfig.typecheck.json` with `skipLibCheck: false` and run pre-build typecheck in `build.ts`.\n>   - Tighten `tsconfig.json` (strict flags, Bun-only `types`, include `.d.ts`), and set `tsconfig.build.json` to use Bun types with `skipLibCheck: true` for dts emit.\n>   - Add `src/types.d.ts` to reconcile Bun and Node `ProcessEnv` typings (ensure `TZ?: string`).\n> - **Tests**\n>   - Migrate tests to Bun (`vitest` → `bun test`); update `__tests__/actions/swap.test.ts` import.\n>   - Add `__tests__/tsconfig.test.ts` to enforce type safety config (Bun types present, Node types absent, `skipLibCheck` rules, presence of `types.d.ts`).\n> - **Solana Swap Action** (`src/actions/swap.ts`)\n>   - Validate `SOL_ADDRESS` presence when swapping SOL; handle decimals safely; improve error messages and wallet token resolution defaults.\n> - **Routes** (`src/routes/index.ts`)\n>   - Build `ApiError` conditionally to omit `details` when undefined.\n> - **Package** (`package.json`)\n>   - Switch test script to `bun test`; remove `vitest` and `@types/node` dev deps.\n> \n> <sup>Written by [Cursor Bugbot](https://cursor.com/dashboard?tab=bugbot) for commit 72a3fb81d395723c2444fba7fd2cc0049c73dd53. This will update automatically on new commits. Configure [here](https://cursor.com/dashboard?tab=bugbot).</sup>\n<!-- /CURSOR_SUMMARY -->\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n* **Tests**\n  * Added TypeScript configuration validation test suite.\n\n* **Chores**\n  * Transitioned test framework to Bun runtime.\n  * Enhanced TypeScript compilation strictness for improved type safety.\n  * Integrated pre-build type checking to catch errors early.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/plugin-solana",
      "createdAt": "2025-10-31T01:05:02Z",
      "mergedAt": null,
      "additions": 235,
      "deletions": 33
    }
  ],
  "codeChanges": {
    "additions": 0,
    "deletions": 0,
    "files": 0,
    "commitCount": 18
  },
  "completedItems": [],
  "topContributors": [
    {
      "username": "odilitime",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16395496?u=c9bac48e632aae594a0d85aaf9e9c9c69b674d8b&v=4",
      "totalScore": 159.2472026483995,
      "prScore": 159.2472026483995,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "yungalgo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113615973?u=92e0f29f7e2fbb8ce46ed13c51f692ca803de02d&v=4",
      "totalScore": 20.391573590279975,
      "prScore": 20.391573590279975,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    }
  ],
  "newPRs": 3,
  "mergedPRs": 0,
  "newIssues": 0,
  "closedIssues": 0,
  "activeContributors": 1
}