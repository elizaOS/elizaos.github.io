{
  "interval": {
    "intervalStart": "2025-06-16T00:00:00.000Z",
    "intervalEnd": "2025-06-17T00:00:00.000Z",
    "intervalType": "day"
  },
  "repository": "elizaos-plugins/plugin-farcaster",
  "overview": "From 2025-06-16 to 2025-06-17, elizaos-plugins/plugin-farcaster had 0 new PRs (1 merged), 0 new issues, and 5 active contributors.",
  "topIssues": [],
  "topPRs": [
    {
      "id": "PR_kwDOOtnBDc6ankD_",
      "title": "refactor: update Farcaster nomenclature from 'post' to 'cast'",
      "author": "wtfsayo",
      "number": 4,
      "body": "## Summary\nThis PR refactors the Farcaster plugin to use proper Farcaster-native \"cast\" terminology instead of generic \"post\" terminology, while maintaining full backward compatibility with existing integrations.\n\n## Key Changes\n- **File Structure**: Renamed `PostService.ts` → `CastService.ts`\n- **Class Names**: `FarcasterPostService` → `FarcasterCastService`\n- **Internal Variables**: Updated all internal variable names (`post` → `cast`, `posts` → `casts`)\n- **Configuration**: Updated config keys (`ENABLE_POST` → `ENABLE_CAST`, `POST_INTERVAL_*` → `CAST_INTERVAL_*`, etc.)\n- **Logging**: All internal log messages now use \"cast\" terminology\n- **Tests**: Updated test files to use new terminology and configuration\n- **Types**: Added `FarcasterMessageType` enum with `CAST` and `REPLY` values\n\n## Backward Compatibility ✅\n- **Preserved**: All `IPostService` interface methods (`createPost`, `getPost`, `getPosts`, etc.)\n- **Preserved**: Method signatures and return types\n- **Preserved**: `getPostService()` method still works alongside new `getCastService()`\n- **No Breaking Changes**: External consumers continue to work without modification\n\n## Technical Details\n- Created local interface definitions for missing `@elizaos/core` exports\n- Updated event types (`POST_GENERATED` → `CAST_GENERATED`)\n- Maintained service compatibility with both old and new method names\n- All internal Farcaster code now uses proper \"cast\" terminology\n\n## Test Results\n- ✅ Build: `bun run build` passes\n- ✅ Tests: All 16 component tests pass\n- ✅ TypeScript: No compilation errors\n- ✅ Linting: Code follows project standards\n\n## Migration Impact\n**For Plugin Users**: No action required - all existing code continues to work\n**For Plugin Developers**: Can now use `getCastService()` for cleaner Farcaster-native code\n\nThis refactoring brings the codebase in line with Farcaster's native terminology while ensuring zero disruption to existing integrations.\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n- **New Features**\n\t- Introduced a Cast Service for managing Farcaster social media casts, including creation, retrieval, and interaction features.\n- **Refactor**\n\t- Replaced all \"post\" terminology with \"cast\" across the app to align with Farcaster's language.\n\t- Updated service, manager, and configuration names and methods to use \"cast\" instead of \"post\".\n\t- Deprecated the old post service getter in favor of a new cast service getter.\n- **Documentation**\n\t- Updated README and in-code documentation to reflect the new \"cast\" terminology and configuration.\n- **Tests**\n\t- Added comprehensive unit tests for cast-related types and configuration.\n\t- Updated test scenarios to use \"cast\" terminology.\n\t- Removed outdated tests related to the old post service and configuration.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
      "repository": "elizaos-plugins/plugin-farcaster",
      "createdAt": "2025-06-15T21:51:33Z",
      "mergedAt": "2025-06-16T13:19:51Z",
      "additions": 1026,
      "deletions": 850
    }
  ],
  "codeChanges": {
    "additions": 1026,
    "deletions": 850,
    "files": 20,
    "commitCount": 4
  },
  "completedItems": [
    {
      "title": "refactor: update Farcaster nomenclature from 'post' to 'cast'",
      "prNumber": 4,
      "type": "refactor",
      "body": "## Summary\nThis PR refactors the Farcaster plugin to use proper Farcaster-native \"cast\" terminology instead of generic \"post\" terminology, while maintaining full backward compatibility with existing integrations.\n\n## Key Changes\n- **File St",
      "files": [
        ".env.example",
        "README.md",
        "package.json",
        "src/__tests__/e2e/scenarios.ts",
        "src/__tests__/suite.ts",
        "src/__tests__/unit/common/types.test.ts",
        "src/__tests__/unit/config.test.ts",
        "src/__tests__/unit/service.test.ts",
        "src/actions/replyCast.ts",
        "src/actions/sendCast.ts",
        "src/common/config.ts",
        "src/common/constants.ts",
        "src/common/types.ts",
        "src/managers/agent.ts",
        "src/managers/post.ts",
        "src/providers/timelineProvider.ts",
        "src/service.ts",
        "src/services/CastService.ts",
        "src/services/MessageService.ts",
        "src/services/PostService.ts"
      ]
    }
  ],
  "topContributors": [
    {
      "username": "wtfsayo",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82053242?u=98209a1f10456f42d4d2fa71db4d5bf4a672cbc3&v=4",
      "totalScore": 176.83763080296222,
      "prScore": 176.39963080296224,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.43799999999999994,
      "summary": null
    },
    {
      "username": "0xbbjoker",
      "avatarUrl": "https://avatars.githubusercontent.com/u/54844437?u=90fe1762420de6ad493a1c1582f1f70c0d87d8e2&v=4",
      "totalScore": 93.9306841628588,
      "prScore": 83.59068416285879,
      "issueScore": 0,
      "reviewScore": 10,
      "commentScore": 0.33999999999999997,
      "summary": null
    },
    {
      "username": "tcm390",
      "avatarUrl": "https://avatars.githubusercontent.com/u/60634884?u=c6c41679b8322eaa0c81f72e0b4ed95e80f0ac16&v=4",
      "totalScore": 71.38345838949215,
      "prScore": 71.38345838949215,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "ChristopherTrimboli",
      "avatarUrl": "https://avatars.githubusercontent.com/u/27584221?u=0d816ce1dcdea8f925aba18bb710153d4a87a719&v=4",
      "totalScore": 54.5437738965761,
      "prScore": 49.5437738965761,
      "issueScore": 0,
      "reviewScore": 5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "lalalune",
      "avatarUrl": "https://avatars.githubusercontent.com/u/18633264?u=e2e906c3712c2506ebfa98df01c2cfdc50050b30&v=4",
      "totalScore": 49.78677389657609,
      "prScore": 49.78677389657609,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "soyrubio",
      "avatarUrl": "https://avatars.githubusercontent.com/u/70545288?u=cbbec71fcd4cd8c34a38a6689a072bbba98b27de&v=4",
      "totalScore": 23.790573590279973,
      "prScore": 23.790573590279973,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "github-advanced-security",
      "avatarUrl": "https://avatars.githubusercontent.com/in/57789?v=4",
      "totalScore": 9,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 9,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "Dexploarer",
      "avatarUrl": "https://avatars.githubusercontent.com/u/211557447?u=21a243d61cc1f87574328ae07fc64d7d7577b53d&v=4",
      "totalScore": 4.5,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 4.5,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "sicco-moonbeam",
      "avatarUrl": "https://avatars.githubusercontent.com/u/92480254?u=d0a396ee2f37b5bb3944aa58a7e75ee3a7e4cda3&v=4",
      "totalScore": 4,
      "prScore": 0,
      "issueScore": 4,
      "reviewScore": 0,
      "commentScore": 0,
      "summary": null
    },
    {
      "username": "alex-nax",
      "avatarUrl": "https://avatars.githubusercontent.com/u/82507604?u=b3af75d82f80ed83007a77c351a64bdd9e5d67de&v=4",
      "totalScore": 0.2,
      "prScore": 0,
      "issueScore": 0,
      "reviewScore": 0,
      "commentScore": 0.2,
      "summary": null
    }
  ],
  "newPRs": 0,
  "mergedPRs": 1,
  "newIssues": 0,
  "closedIssues": 0,
  "activeContributors": 5
}